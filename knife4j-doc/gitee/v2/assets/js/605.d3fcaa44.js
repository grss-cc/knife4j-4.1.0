(window.webpackJsonp=window.webpackJsonp||[]).push([[605],{954:function(e,t,a){"use strict";a.r(t);var s=a(42),n=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"_1-4-eureka模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-eureka模式"}},[e._v("#")]),e._v(" 1.4 Eureka模式")]),e._v(" "),a("p",[e._v("更加详细的实战demo请参考"),a("RouterLink",{attrs:{to:"/action/aggregation-eureka.html"}},[e._v("基于Eureka注册中心聚合OpenAPI")])],1),e._v(" "),a("blockquote",[a("p",[e._v("开发者可以从Eureka注册中心中聚合已经注册的服务，需要注意的是以及注册的服务必须集成OpenAPI并且能提供接口\n该模式类似于Cloud模式，只是隐藏了服务的地址而已")])]),e._v(" "),a("div",{staticClass:"language-yml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("knife4j")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("enableAggregation")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[e._v("true")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("eureka")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("enable")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[e._v("false")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("serviceUrl")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" http"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("//localhost"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("10000/eureka/\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("serviceAuth")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("enable")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[e._v("false")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("username")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" test\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("password")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("12313")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("routeAuth")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("enable")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[e._v("true")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("username")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" test\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("password")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("12313")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("routes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" 订单服务\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("serviceName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" service"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v("order\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("location")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" /v2/api"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v("docs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("?")]),e._v("group=default\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("swaggerVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("2.0")]),e._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("servicePath")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" /order\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("routeAuth")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("enable")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[e._v("true")]),e._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("username")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" test\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("password")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("12313")]),e._v("\n")])])]),a("ul",[a("li",[a("code",[e._v("knife4j.eureka.enable")]),e._v(":将该属性设置为true，则代表启用Eureka模式")]),e._v(" "),a("li",[a("code",[e._v("knife4j.eureka.serviceUrl")]),e._v(":Eureka注册中心的地址")]),e._v(" "),a("li",[a("code",[e._v("knife4j.eureka.serviceAuth")]),e._v(":该属性是一个公共Basic验证属性(可选)，如果Eureka的注册和获取服务需要进行Basic认证，开发者需要配置该属性")]),e._v(" "),a("li",[a("code",[e._v("knife4j.eureka.serviceAuth.enable")]),e._v(":是否启用Eureka注册中心Basic验证")]),e._v(" "),a("li",[a("code",[e._v("knife4j.eureka.serviceAuth.usernae")]),e._v(":Eureka注册中心Basic用户名")]),e._v(" "),a("li",[a("code",[e._v("knife4j.eureka.serviceAuth.password")]),e._v(":Eureka注册中心Basic密码")]),e._v(" "),a("li",[a("code",[e._v("knife4j.eureka.routeAuth")]),e._v(":该属性是一个公共Basic验证属性(可选)，如果开发者提供的OpenAPI规范的服务需要以Basic验证进行鉴权访问，那么可以配置该属性，如果配置该属性，则该模式下所有配置的Routes节点接口都会以Basic验证信息访问接口")]),e._v(" "),a("li",[a("code",[e._v("knife4j.eureka.routeAuth.enable")]),e._v(":是否启用Basic验证")]),e._v(" "),a("li",[a("code",[e._v("knife4j.eureka.routeAuth.usernae")]),e._v(":Basic用户名")]),e._v(" "),a("li",[a("code",[e._v("knife4j.eureka.routeAuth.password")]),e._v(":Basic密码")]),e._v(" "),a("li",[a("code",[e._v("knife4j.eureka.routes")]),e._v(":需要聚合的服务集合(必选)，可以配置多个")]),e._v(" "),a("li",[a("code",[e._v("knife4j.eureka.routes.name")]),e._v(":服务名称(显示名称，最终在Ui的左上角下拉框进行显示)，如果该属性不配置，最终Ui会显示"),a("code",[e._v("serviceName")])]),e._v(" "),a("li",[a("code",[e._v("knife4j.eureka.routes.serviceName")]),e._v(":Eureka注册中心的服务名称")]),e._v(" "),a("li",[a("code",[e._v("knife4j.eureka.routes.uri")]),e._v(":该服务的接口URI资源，如果是HTTPS，则需要完整配置")]),e._v(" "),a("li",[a("code",[e._v("knife4j.eureka.routes.location:")]),e._v(":具体资源接口地址，最终Knife4j是通过注册服务uri+location的组合路径进行访问")]),e._v(" "),a("li",[a("code",[e._v("knife4j.eureka.routes.swaggerVersion")]),e._v(":版本号，默认是"),a("code",[e._v("2.0")]),e._v("，可选配置")]),e._v(" "),a("li",[a("code",[e._v("knife4j.eureka.routes.servicePath")]),e._v(":该属性是最终在Ui中展示的接口前缀属性，提供该属性的目的也是因为通常开发者在以Gateway等方式聚合时，需要一个前缀路径来进行转发，而最终这个前缀路径会在每个接口中进行追加")]),e._v(" "),a("li",[a("code",[e._v("knife4j.eureka.routes.routeAuth")]),e._v(":如果该Route节点的接口开启了Basic，并且和公共配置的Basic不一样，需要单独配置")]),e._v(" "),a("li",[a("code",[e._v("knife4j.eureka.routes.routeAuth.enable")]),e._v(":是否启用Basic验证")]),e._v(" "),a("li",[a("code",[e._v("knife4j.eureka.routes.routeAuth.usernae")]),e._v(":Basic用户名")]),e._v(" "),a("li",[a("code",[e._v("knife4j.eureka.routes.routeAuth.password")]),e._v(":Basic密码")])]),e._v(" "),a("comment-comment")],1)}),[],!1,null,null,null);t.default=n.exports}}]);