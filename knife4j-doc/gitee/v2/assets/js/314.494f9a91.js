(window.webpackJsonp=window.webpackJsonp||[]).push([[314],{664:function(t,s,a){"use strict";a.r(s);var e=a(42),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"_1-5-nacos模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-nacos模式"}},[t._v("#")]),t._v(" 1.5 Nacos模式")]),t._v(" "),a("p",[t._v("更加详细的实战demo请参考"),a("RouterLink",{attrs:{to:"/archive/2.0.9/action/aggregation-nacos.html"}},[t._v("基于Nacos注册中心聚合OpenAPI")])],1),t._v(" "),a("blockquote",[a("p",[t._v("开发者可以从Nacos注册中心中聚合已经注册的服务，需要注意的是以及注册的服务必须集成OpenAPI并且能提供接口\n该模式类似于Cloud模式，只是隐藏了服务的地址而已")])]),t._v(" "),a("div",{staticClass:"language-yml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("knife4j")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("enableAggregation")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nacos")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("enable")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("serviceUrl")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" http"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//192.168.0.112"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("8804/nacos/\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("routeAuth")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("enable")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("username")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" test\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("password")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12313")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("routes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 订单服务\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("serviceName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" service"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("order\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("groupName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" test\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespaceId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" test\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("clusters")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" test\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("location")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /v2/api"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("docs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("?")]),t._v("group=default\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("swaggerVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.0")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("servicePath")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /order\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("routeAuth")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("enable")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("username")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" test\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("password")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12313")]),t._v("\n")])])]),a("ul",[a("li",[a("code",[t._v("knife4j.nacos.enable")]),t._v(":将该属性设置为true，则代表启用nacos模式")]),t._v(" "),a("li",[a("code",[t._v("knife4j.nacos.serviceUrl")]),t._v(":nacos注册中心的地址")]),t._v(" "),a("li",[a("code",[t._v("knife4j.nacos.routeAuth")]),t._v(":该属性是一个公共Basic验证属性(可选)，如果开发者提供的OpenAPI规范的服务需要以Basic验证进行鉴权访问，那么可以配置该属性，如果配置该属性，则该模式下所有配置的Routes节点接口都会以Basic验证信息访问接口")]),t._v(" "),a("li",[a("code",[t._v("knife4j.nacos.routeAuth.enable")]),t._v(":是否启用Basic验证")]),t._v(" "),a("li",[a("code",[t._v("knife4j.nacos.routeAuth.usernae")]),t._v(":Basic用户名")]),t._v(" "),a("li",[a("code",[t._v("knife4j.nacos.routeAuth.password")]),t._v(":Basic密码")]),t._v(" "),a("li",[a("code",[t._v("knife4j.nacos.routes")]),t._v(":需要聚合的服务集合(必选)，可以配置多个")]),t._v(" "),a("li",[a("code",[t._v("knife4j.nacos.routes.name")]),t._v(":服务名称(显示名称，最终在Ui的左上角下拉框进行显示)，如果该属性不配置，最终Ui会显示"),a("code",[t._v("serviceName")])]),t._v(" "),a("li",[a("code",[t._v("knife4j.nacos.routes.serviceName")]),t._v(":nacos注册中心的服务名称")]),t._v(" "),a("li",[a("code",[t._v("knife4j.nacos.routes.groupName")]),t._v(":Nacos分组名称,非必须,开发者根据自己的实际情况进行配置")]),t._v(" "),a("li",[a("code",[t._v("knife4j.nacos.routes.namespaceId")]),t._v(":命名空间id,非必须,开发者根据自己的实际情况进行配置")]),t._v(" "),a("li",[a("code",[t._v("knife4j.nacos.routes.clusters")]),t._v(":集群名称,多个集群用逗号分隔,非必须,开发者根据自己的实际情况进行配置")]),t._v(" "),a("li",[a("code",[t._v("knife4j.nacos.routes.uri")]),t._v(":该服务的接口URI资源，如果是HTTPS，则需要完整配置")]),t._v(" "),a("li",[a("code",[t._v("knife4j.nacos.routes.location:")]),t._v(":具体资源接口地址，最终Knife4j是通过注册服务uri+location的组合路径进行访问")]),t._v(" "),a("li",[a("code",[t._v("knife4j.nacos.routes.swaggerVersion")]),t._v(":版本号，默认是"),a("code",[t._v("2.0")]),t._v("，可选配置")]),t._v(" "),a("li",[a("code",[t._v("knife4j.nacos.routes.servicePath")]),t._v(":该属性是最终在Ui中展示的接口前缀属性，提供该属性的目的也是因为通常开发者在以Gateway等方式聚合时，需要一个前缀路径来进行转发，而最终这个前缀路径会在每个接口中进行追加")]),t._v(" "),a("li",[a("code",[t._v("knife4j.nacos.routes.routeAuth")]),t._v(":如果该Route节点的接口开启了Basic，并且和公共配置的Basic不一样，需要单独配置")]),t._v(" "),a("li",[a("code",[t._v("knife4j.nacos.routes.routeAuth.enable")]),t._v(":是否启用Basic验证")]),t._v(" "),a("li",[a("code",[t._v("knife4j.nacos.routes.routeAuth.usernae")]),t._v(":Basic用户名")]),t._v(" "),a("li",[a("code",[t._v("knife4j.nacos.routes.routeAuth.password")]),t._v(":Basic密码")])]),t._v(" "),a("comment-comment")],1)}),[],!1,null,null,null);s.default=n.exports}}]);